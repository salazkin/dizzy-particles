{"version":3,"file":"dizzy-particles.js","sources":["../src/index.js"],"sourcesContent":["import { degreeToRadians, getPositionOnCubicBezierCurve, getPositionOnLine, hexToHsl, hslToHex, interpolate, shortPathInterpolate } from \"dizzy-utils\";\r\nclass Point {\r\n    constructor() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n;\r\nclass Particles {\r\n    constructor(totalParticles, loop, config, cb) {\r\n        this.totalParticles = totalParticles;\r\n        this.loop = loop;\r\n        this.config = config;\r\n        this.cb = cb;\r\n        this.particles = [];\r\n        this.time = 0;\r\n        this.delay = 0;\r\n        this.posStart = { x: 0, y: 0 };\r\n        this.posEnd = { x: 0, y: 0 };\r\n        this.curveLen = 20;\r\n        this.curveSeg = 1 / (this.curveLen - 1);\r\n        this.correctedTintArr = null;\r\n        this.createParticles(totalParticles);\r\n    }\r\n    createParticles(totalParticles) {\r\n        for (let i = 0; i < totalParticles; i++) {\r\n            const particleResult = this.createParticle();\r\n            particleResult.alpha = 0;\r\n            const particleData = {\r\n                result: particleResult,\r\n                updated: false,\r\n                delay: this.getDelay(),\r\n                duration: this.getDuration()\r\n            };\r\n            this.particles.push(particleData);\r\n        }\r\n    }\r\n    createParticle() {\r\n        return { x: 0, y: 0, alpha: 1, scaleX: 1, scaleY: 1, rotation: 0, tint: 0xffffff };\r\n    }\r\n    update(dt) {\r\n        const time = this.time;\r\n        let count = 0;\r\n        this.particles.forEach(particleData => {\r\n            if (particleData.duration === 0) {\r\n                count++;\r\n                return;\r\n            }\r\n            const t = (time - particleData.delay) / particleData.duration;\r\n            if (t >= 0 && t <= 1) {\r\n                particleData.result.alpha = 1;\r\n                if (!particleData.updated) {\r\n                    particleData.updated = true;\r\n                    this.updateParticleData(particleData);\r\n                }\r\n                this.updateResult(particleData, t);\r\n            }\r\n            else {\r\n                particleData.updated = false;\r\n                particleData.result.alpha = 0;\r\n            }\r\n            if (time >= particleData.delay + particleData.duration) {\r\n                if (this.loop) {\r\n                    particleData.duration = this.getDuration();\r\n                    particleData.delay = this.getDelay();\r\n                }\r\n                else {\r\n                    count++;\r\n                    particleData.duration = 0;\r\n                    particleData.result.alpha = 0;\r\n                }\r\n            }\r\n        });\r\n        this.delay = 0;\r\n        this.time += dt;\r\n        if (count >= this.particles.length) {\r\n            this.onComplete();\r\n        }\r\n    }\r\n    reset() {\r\n        this.time = 0;\r\n        this.delay = 0;\r\n        this.particles.forEach(particleData => {\r\n            particleData.updated = false;\r\n            particleData.delay = this.getDelay(),\r\n                particleData.duration = this.getDuration();\r\n            if (particleData.result) {\r\n                particleData.result.alpha = 0;\r\n                particleData.result.x = 0;\r\n                particleData.result.y = 0;\r\n            }\r\n        });\r\n    }\r\n    onComplete() {\r\n        if (this.cb) {\r\n            this.cb();\r\n        }\r\n    }\r\n    set posStartX(value) {\r\n        this.posStart.x = value;\r\n    }\r\n    set posStartY(value) {\r\n        this.posStart.y = value;\r\n    }\r\n    set posEndX(value) {\r\n        this.posEnd.x = value;\r\n    }\r\n    set posEndY(value) {\r\n        this.posEnd.y = value;\r\n    }\r\n    setPosStart(x, y) {\r\n        this.posStart.x = x;\r\n        this.posStart.y = y;\r\n    }\r\n    setPosEnd(x, y) {\r\n        this.posEnd.x = x;\r\n        this.posEnd.y = y;\r\n    }\r\n    setData(config) {\r\n        this.correctedTintArr = null;\r\n        this.config = config;\r\n    }\r\n    getDuration() {\r\n        return this.getValue(\"duration\");\r\n    }\r\n    getDelay() {\r\n        this.delay += this.getValue(\"delay\");\r\n        return this.time + this.delay;\r\n    }\r\n    updateParticleData(particleData) {\r\n        const startX = this.posStart.x + this.getValue(\"posStartOffsetX\");\r\n        const startY = this.posStart.y + this.getValue(\"posStartOffsetY\");\r\n        const endX = this.posEnd.x + this.getValue(\"posEndOffsetX\");\r\n        const endY = this.posEnd.y + this.getValue(\"posEndOffsetY\");\r\n        particleData.posStart = { x: startX, y: startY };\r\n        particleData.posEnd = { x: endX, y: endY };\r\n        particleData.cp1 = null;\r\n        particleData.cp2 = null;\r\n        const cp1Mag = this.getValue(\"posControlPoint1Mag\");\r\n        const cp2Mag = this.getValue(\"posControlPoint2Mag\");\r\n        if (cp1Mag !== 0 || cp2Mag !== 0) {\r\n            const dx = endX - startX;\r\n            const dy = endY - startY;\r\n            const ang = Math.atan2(dx, dy);\r\n            const angle1 = ang + degreeToRadians(this.getValue(\"posControlPoint1Angle\"));\r\n            const angle2 = -(Math.PI - ang) + degreeToRadians(this.getValue(\"posControlPoint2Angle\"));\r\n            const dist = Math.sqrt(dx * dx + dy * dy);\r\n            particleData.cp1 = { x: startX + Math.sin(angle1) * dist * cp1Mag, y: startY + Math.cos(angle1) * dist * cp1Mag };\r\n            particleData.cp2 = { x: endX + Math.sin(angle2) * dist * cp2Mag, y: endY + Math.cos(angle2) * dist * cp2Mag };\r\n            if (particleData.curve) {\r\n                particleData.curve.length = 0;\r\n            }\r\n            else {\r\n                particleData.curve = [];\r\n            }\r\n        }\r\n        else {\r\n            particleData.curve = undefined;\r\n        }\r\n        particleData.alphaFrom = this.getValue(\"alphaFrom\");\r\n        particleData.alphaTo = this.getValue(\"alphaTo\");\r\n        particleData.alphaYoYo = this.getValue(\"alphaYoYo\");\r\n        if (this.config.tint) {\r\n            if (this.config.tintInterpolate && Array.isArray(this.config.tint) && this.config.tint.length > 1) {\r\n                if (!this.correctedTintArr) {\r\n                    this.correctedTintArr = getInterpolatedColors(this.config.tint, 10);\r\n                }\r\n                particleData.tint = this.correctedTintArr;\r\n            }\r\n            else {\r\n                particleData.tint = parseInt(this.getValue(\"tint\"));\r\n            }\r\n        }\r\n        particleData.scaleFrom = this.getValue(\"scaleFrom\");\r\n        particleData.scaleTo = this.getValue(\"scaleTo\");\r\n        particleData.scaleYoYo = this.getValue(\"scaleYoYo\");\r\n        particleData.rotationSpeed = degreeToRadians(this.getValue(\"rotationSpeed\"));\r\n    }\r\n    getValue(key) {\r\n        if (Array.isArray(this.config[key])) {\r\n            const arr = this.config[key];\r\n            const index = arr.length > 1 ? Math.floor(Math.random() * arr.length) : 0;\r\n            if (Array.isArray(arr[index])) {\r\n                const min = arr[index][0];\r\n                const max = arr[index][1];\r\n                return Math.random() * (max - min) + min;\r\n            }\r\n            else {\r\n                return arr[index];\r\n            }\r\n        }\r\n        else {\r\n            return this.config[key] || 0;\r\n        }\r\n    }\r\n    updateResult(particleData, t) {\r\n        const yoyoTime = t * (1 - t) * 2;\r\n        const result = particleData.result;\r\n        result.alpha = particleData.alphaFrom + (particleData.alphaTo - particleData.alphaFrom) * (particleData.alphaYoYo ? yoyoTime : t);\r\n        result.scaleX = result.scaleY = interpolate(particleData.scaleYoYo ? yoyoTime : t, particleData.scaleFrom, particleData.scaleTo);\r\n        if (particleData.curve) {\r\n            const from = Math.floor(t / this.curveSeg);\r\n            const to = from + 1;\r\n            if (particleData.curve[from] === undefined) {\r\n                particleData.curve[from] = from === 0 ? particleData.posStart : new Point();\r\n            }\r\n            if (particleData.curve[to] === undefined) {\r\n                particleData.curve[to] = to === this.curveLen - 1 ? particleData.posEnd : new Point();\r\n            }\r\n            if (from !== 0) {\r\n                getPositionOnCubicBezierCurve(from * this.curveSeg, particleData.posStart, particleData.posEnd, particleData.cp1, particleData.cp2, particleData.curve[from]);\r\n            }\r\n            if (to !== this.curveLen - 1) {\r\n                getPositionOnCubicBezierCurve(to * this.curveSeg, particleData.posStart, particleData.posEnd, particleData.cp1, particleData.cp2, particleData.curve[to]);\r\n            }\r\n            getPositionOnLine((t % this.curveSeg) / this.curveSeg, particleData.curve[from], particleData.curve[to], result);\r\n        }\r\n        else {\r\n            getPositionOnLine(t, particleData.posStart, particleData.posEnd, result);\r\n        }\r\n        if (particleData.rotationSpeed !== 0) {\r\n            result.rotation += particleData.rotationSpeed;\r\n        }\r\n        else {\r\n            result.rotation = 0;\r\n        }\r\n        if (particleData.tint) {\r\n            if (Array.isArray(particleData.tint)) {\r\n                const seg = 1 / (particleData.tint.length - 1);\r\n                result.tint = particleData.tint[Math.floor(t / seg)];\r\n            }\r\n            else {\r\n                result.tint = particleData.tint;\r\n            }\r\n        }\r\n    }\r\n    kill() {\r\n        this.particles.length = 0;\r\n        this.cb = null;\r\n    }\r\n}\r\nconst getInterpolatedColors = (hexArr, steps) => {\r\n    const arr = hexArr.map(hex => hexToHsl(parseInt(hex)));\r\n    const out = [];\r\n    const step = 1 / steps;\r\n    const seg = 1 / (arr.length - 1);\r\n    for (let i = 0; i < steps + 1; i++) {\r\n        const t = Math.min(step * i, 1);\r\n        const index = Math.min(Math.floor(t / seg), arr.length - 2);\r\n        const c1 = arr[index];\r\n        const c2 = arr[index + 1];\r\n        out.push(hslToHex(...c1.map((c, i) => shortPathInterpolate(t, c, c2[i]))));\r\n    }\r\n    return out;\r\n};\r\nexport { Particles };\r\n"],"names":[],"mappings":"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"}