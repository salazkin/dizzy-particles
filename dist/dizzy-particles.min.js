class t{constructor(){this.x=0,this.y=0}}class e{constructor(t,e,s,a){this.totalParticles=t,this.loop=e,this.config=s,this.cb=a,this.particles=[],this.time=0,this.delay=0,this.posStart={x:0,y:0},this.posEnd={x:0,y:0},this.curveLen=20,this.curveSeg=1/(this.curveLen-1),this.correctedTintArr=null,this.createParticles(t)}createParticles(t){for(let e=0;e<t;e++){const t=this.createParticle();t.alpha=0;const e={result:t,updated:!1,delay:this.getDelay(),duration:this.getDuration()};this.particles.push(e)}}createParticle(){return{x:0,y:0,alpha:1,scaleX:1,scaleY:1,rotation:0,tint:"0xffffff"}}update(t){const e=this.time;let s=0;this.particles.forEach((t=>{if(0===t.duration)return void s++;const a=(e-t.delay)/t.duration;a>=0&&a<=1?(t.result.alpha=1,t.updated||(t.updated=!0,this.updateParticleData(t)),this.updateResult(t,a)):(t.updated=!1,t.result.alpha=0),e>=t.delay+t.duration&&(this.loop?(t.duration=this.getDuration(),t.delay=this.getDelay()):(s++,t.duration=0,t.result.alpha=0))})),this.delay=0,this.time+=t,s>=this.particles.length&&this.onComplete()}reset(){this.time=0,this.delay=0,this.particles.forEach((t=>{t.updated=!1,t.delay=this.getDelay(),t.duration=this.getDuration(),t.result&&(t.result.alpha=0,t.result.x=0,t.result.y=0)}))}onComplete(){this.cb&&this.cb()}set posStartX(t){this.posStart.x=t}set posStartY(t){this.posStart.y=t}set posEndX(t){this.posEnd.x=t}set posEndY(t){this.posEnd.y=t}setPosStart(t,e){this.posStart.x=t,this.posStart.y=e}setPosEnd(t,e){this.posEnd.x=t,this.posEnd.y=e}setData(t){this.correctedTintArr=null,this.config=t}getDuration(){return this.getValue("duration")}getDelay(){return this.delay+=this.getValue("delay"),this.time+this.delay}updateParticleData(t){const e=this.posStart.x+this.getValue("posStartOffsetX"),a=this.posStart.y+this.getValue("posStartOffsetY"),i=this.posEnd.x+this.getValue("posEndOffsetX"),r=this.posEnd.y+this.getValue("posEndOffsetY");t.posStart={x:e,y:a},t.posEnd={x:i,y:r},t.cp1=null,t.cp2=null;const o=this.getValue("posControlPoint1Mag"),n=this.getValue("posControlPoint2Mag");if(0!==o||0!==n){let s=i-e,l=r-a,c=Math.atan2(s,l),u=c+h(this.getValue("posControlPoint1Angle")),p=-(Math.PI-c)+h(this.getValue("posControlPoint2Angle")),d=Math.sqrt(s*s+l*l);t.cp1={x:e+Math.sin(u)*d*o,y:a+Math.cos(u)*d*o},t.cp2={x:i+Math.sin(p)*d*n,y:r+Math.cos(p)*d*n},t.curve?t.curve.length=0:t.curve=[]}t.alphaFrom=this.getValue("alphaFrom"),t.alphaTo=this.getValue("alphaTo"),t.alphaYoYo=this.getValue("alphaYoYo"),this.config.tint&&(this.config.tintInterpolate&&Array.isArray(this.config.tint)&&this.config.tint.length>1?(this.correctedTintArr||(this.correctedTintArr=s(this.config.tint,5)),t.tint=this.correctedTintArr):t.tint=this.getValue("tint")),t.scaleFrom=this.getValue("scaleFrom"),t.scaleTo=this.getValue("scaleTo"),t.scaleYoYo=this.getValue("scaleYoYo"),t.rotationSpeed=h(this.getValue("rotationSpeed"))}getValue(t){if(Array.isArray(this.config[t])){const e=this.config[t],s=e.length>1?Math.floor(Math.random()*e.length):0;if(Array.isArray(e[s])){const t=e[s][0],a=e[s][1];return Math.random()*(a-t)+t}return e[s]}return this.config[t]||0}updateResult(e,s){const i=s*(1-s)*2,r=e.result;if(r.alpha=e.alphaFrom+(e.alphaTo-e.alphaFrom)*(e.alphaYoYo?i:s),r.scaleX=r.scaleY=a(e.scaleYoYo?i:s,e.scaleFrom,e.scaleTo),e.curve){const a=Math.floor(s/this.curveSeg),i=a+1;void 0===e.curve[a]&&(e.curve[a]=0===a?e.posStart:new t),void 0===e.curve[i]&&(e.curve[i]=i===this.curveLen-1?e.posEnd:new t),0!==a&&c(e.curve[a],a*this.curveSeg,e.posStart,e.posEnd,e.cp1,e.cp2),i!==this.curveLen-1&&c(e.curve[i],i*this.curveSeg,e.posStart,e.posEnd,e.cp1,e.cp2),l(r,s%this.curveSeg/this.curveSeg,e.curve[a],e.curve[i])}else l(r,s,e.posStart,e.posEnd);if(0!==e.rotationSpeed?r.rotation+=e.rotationSpeed:r.rotation=0,e.tint)if(Array.isArray(e.tint)){const t=1/(e.tint.length-1);r.tint=e.tint[Math.floor(s/t)]}else r.tint=e.tint}kill(){this.particles.length=0,this.cb=null}}const s=(t,e)=>{const s=t.map((t=>i(t))),o=[],n=1/e;for(let t=0;t<e+1;t++){const e=Math.min(n*t,1),i=1/(s.length-1),h=Math.min(Math.floor(e/i),s.length-2),l=s[h],c=s[h+1];o.push(r(l.map(((t,s)=>a(e,t,c[s],0===s)))))}return o},a=(t,e,s,a)=>{if(!a)return e+(s-e)*t;const i=Math.min(e,s),r=Math.max(e,s),o=r-i,n=1-r+i;return o<n?i+o*t:(r+n*t)%1},i=t=>{const e=parseInt(t.substring(t.length-6,t.length-4),16)/255,s=parseInt(t.substring(t.length-4,t.length-2),16)/255,a=parseInt(t.substring(t.length-2,t.length),16)/255,i=Math.max(e,s,a),r=Math.min(e,s,a);let o=(i+r)/2,n=0,h=0;if(i!==r){const t=i-r;n=o<.5?t/(i+r):t/(2-i-r),h=e==i?(s-a)/t+(s<a?6:0):s==i?2+(a-e)/t:4+(e-s)/t}return h/=6,[h,n,o]},r=t=>{let e,s,a,i=t[0],r=t[1],h=t[2];if(0==r)e=s=a=h;else{let t=h<.5?h*(1+r):h+r-h*r,n=2*h-t;e=Math.round(255*o(i+1/3,n,t)),s=Math.round(255*o(i,n,t)),a=Math.round(255*o(i-1/3,n,t))}return"0x"+n(e)+n(s)+n(a)},o=(t,e,s)=>(t<0&&(t+=1),t>1&&(t-=1),t<1/6?e+6*(s-e)*t:t<.5?s:t<2/3?e+(s-e)*(2/3-t)*6:e),n=t=>("0"+t.toString(16)).slice(-2),h=t=>t*Math.PI/180,l=(t,e,s,a)=>{t.x=s.x+(a.x-s.x)*e,t.y=s.y+(a.y-s.y)*e},c=(t,e,s,a,i,r)=>{const o=e*e,n=e*e*e;t.x=Math.pow(1-e,3)*s.x+3*Math.pow(1-e,2)*e*i.x+3*(1-e)*o*r.x+n*a.x,t.y=Math.pow(1-e,3)*s.y+3*Math.pow(1-e,2)*e*i.y+3*(1-e)*o*r.y+n*a.y};export{e as Particles};
//# sourceMappingURL=dizzy-particles.min.js.map
